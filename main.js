(()=>{"use strict";var e={365:(e,n,t)=>{t.d(n,{A:()=>a});var o=t(354),r=t.n(o),d=t(314),i=t.n(d)()(r());i.push([e.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    color: white;\n}\n\nbody {\n    display: flex;\n    min-height: 100vh;\n}\n\n#sidebar {\n    display: flex;\n    flex-direction: column;\n    width: 15%;\n    background-color: #404B69;\n}\n\nh1 {\n    background-color: #283149;\n    font-size: 3rem;\n    padding: 0.5rem;\n    text-align: center;\n}\n\n#projects {\n    width: 100%;\n    overflow: auto;\n    flex: 1 0 auto;\n}\n\n.project > p {\n    padding: 0.5rem 0 0.5rem 1rem;\n    font-size: 2rem;\n}\n\n.project {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    cursor: pointer;\n}\n\n.project > input {\n    font-size: 2rem;\n    width: 100%;\n    color: #404B69;\n}\n\n.project:last-child {\n    padding-right: 0;\n}\n\n.project > button {\n    height: fit-content;\n    cursor: pointer;\n    background: none;\n    border: none;\n    margin-right: 1rem;\n}\n\n.project > button > svg > path:hover {\n    fill: #f34949;\n}\n\n.project:hover {\n    background-color: #2d3753;\n    border-left: 4px #DBEDF3 solid;\n}\n\n#add-container {\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n    padding-right: 1rem;\n    margin-bottom: 1rem;\n}\n\n#add-container > button {\n    width: 20%;\n    height: auto;\n    aspect-ratio: 1/1;\n    background-color: #283149;\n    border: none;\n    border-radius: 50%;\n    cursor: pointer;\n    transition-duration: 0.5s;\n}\n\nsvg, svg > path {\n    fill: white;\n}\n\n#add-container > button:hover,\n#add-container > button:hover > svg > path {\n    background-color: white;\n    fill: #283149;\n}\n\nmain {\n    display: flex;\n    flex-direction: column;\n    background-color: #DBEDF3;\n    flex: 1 0 auto;\n    align-items: center;\n}\n\n.add-todo {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    align-self: flex-start;\n    padding: 2rem 0 0 2rem;\n}\n\n.add-todo > button {\n    display: flex;\n    align-items: center;\n    padding: 0.5rem;\n    font-size: 1.4rem;\n    width: 10%;\n    justify-content: space-between;\n    border-radius: 10px;\n    border: 2px #283149 solid;\n    padding-left: 1rem;\n    box-shadow: 0 8px 8px gray;\n    cursor: pointer;\n}\n\n.add-todo > button,\n.add-todo > svg {\n    background-color: #283149;\n    fill: #283149;\n    transition-duration: 0.5s;\n}\n\n.add-todo > button:hover,\n.add-todo > svg:hover,\n.add-todo > svg:hover > path {\n    background-color: #404B69;\n    fill: #404B69;\n    color: #404B69;\n    border: 2px #404B69 solid;\n}\n\n#todo-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 2rem;\n    padding-top: 3rem;\n    width: 100%;\n}\n\n.todo-item {\n    width: 75%;\n    padding: 1rem 1rem 1rem 0;\n    background-color: #404B69;\n    display: flex;\n    border-radius: 10px;\n    /* Modify this part using javascript */\n    /* border-left: 5px #5f5f5f solid; */\n    box-shadow: 0 8px 12px gray;\n    cursor: pointer;\n}\n\n/* DA0463 high, da8404 medium, 04da44 low, 5f5f5f default*/\n\n.checkmark {\n    width: 10%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.checkmark > input {\n    width: 1.5rem;\n    height: 1.5rem;\n}\n\n.todo-details {\n    display: flex;\n    justify-content: space-between;\n    flex: 1 0 auto;\n}\n\n.todo-details > p {\n    font-size: 2rem;\n    padding-right: 1rem;\n}\n\n.add-delete {\n    display: flex;\n    width: 10%;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 1rem;\n    height: 100%;\n}\n\n.add-delete > button {\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.add-delete > button > svg {\n    height: 28px;\n    width: 28px;\n}\n\n.add-delete > button > svg:hover > path {\n    fill: #f34949\n}\n\ndialog {\n    top: 25%;\n    left: 30%;\n    width: 40%;\n    height: 40%;\n    border: none;\n    border-radius: 10px;\n    overflow: hidden;\n}\n\ndialog::backdrop {\n    background-color: gray;\n    opacity: 0.5;\n}\n\n.form-container {\n    width: 100%;\n    height: 100%;\n    border-radius: 10px;\n}\n\n.form-container > h2 {\n    font-size: 2rem;\n    padding: 0.5rem 0;\n    text-align: center;\n    background-color: #404B69;\n}\n\nform {\n    padding-top: 1rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\nform > div,\nform > label {\n    padding-left: 3rem;\n}\n\nform > .input-container > label {\n    color: #404B69;\n    font-weight: bold;\n    font-size: 1.5rem;\n}\n\n.input-container > input,\n.input-container > select,\n.input-container > select > option {\n    width: 90%;\n    font-size: 1.5rem;\n    color: #404B69;\n}\n\n.input-container > input {\n    border: none;\n    border-bottom: 2px #283149 solid;\n}\n.button-action {\n    width: 90%;\n    display: flex;\n    justify-content: space-between;\n}\n\n.button-action > button {\n    width: 20%;\n    font-size: 1.5rem;\n    border-radius: 5px;\n    border: none;\n    padding: 0.5rem 0;\n    color: #404B69;\n    cursor: pointer;\n    transition-duration: 0.5s;\n}\n\n.button-action > button:first-child {\n    background-color: #DBEDF3;\n}\n\n.button-action > button:first-child:hover {\n    background-color: #c1d3da;\n}\n\n.button-action > button:last-child {\n    background-color: #404B69;\n    color: #DBEDF3;\n}\n\n.button-action > button:last-child:hover {\n    background-color: #6a7baa;\n    color: #404B69;\n}\n\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"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",sourcesContent:["* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    color: white;\n}\n\nbody {\n    display: flex;\n    min-height: 100vh;\n}\n\n#sidebar {\n    display: flex;\n    flex-direction: column;\n    width: 15%;\n    background-color: #404B69;\n}\n\nh1 {\n    background-color: #283149;\n    font-size: 3rem;\n    padding: 0.5rem;\n    text-align: center;\n}\n\n#projects {\n    width: 100%;\n    overflow: auto;\n    flex: 1 0 auto;\n}\n\n.project > p {\n    padding: 0.5rem 0 0.5rem 1rem;\n    font-size: 2rem;\n}\n\n.project {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    cursor: pointer;\n}\n\n.project > input {\n    font-size: 2rem;\n    width: 100%;\n    color: #404B69;\n}\n\n.project:last-child {\n    padding-right: 0;\n}\n\n.project > button {\n    height: fit-content;\n    cursor: pointer;\n    background: none;\n    border: none;\n    margin-right: 1rem;\n}\n\n.project > button > svg > path:hover {\n    fill: #f34949;\n}\n\n.project:hover {\n    background-color: #2d3753;\n    border-left: 4px #DBEDF3 solid;\n}\n\n#add-container {\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n    padding-right: 1rem;\n    margin-bottom: 1rem;\n}\n\n#add-container > button {\n    width: 20%;\n    height: auto;\n    aspect-ratio: 1/1;\n    background-color: #283149;\n    border: none;\n    border-radius: 50%;\n    cursor: pointer;\n    transition-duration: 0.5s;\n}\n\nsvg, svg > path {\n    fill: white;\n}\n\n#add-container > button:hover,\n#add-container > button:hover > svg > path {\n    background-color: white;\n    fill: #283149;\n}\n\nmain {\n    display: flex;\n    flex-direction: column;\n    background-color: #DBEDF3;\n    flex: 1 0 auto;\n    align-items: center;\n}\n\n.add-todo {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    align-self: flex-start;\n    padding: 2rem 0 0 2rem;\n}\n\n.add-todo > button {\n    display: flex;\n    align-items: center;\n    padding: 0.5rem;\n    font-size: 1.4rem;\n    width: 10%;\n    justify-content: space-between;\n    border-radius: 10px;\n    border: 2px #283149 solid;\n    padding-left: 1rem;\n    box-shadow: 0 8px 8px gray;\n    cursor: pointer;\n}\n\n.add-todo > button,\n.add-todo > svg {\n    background-color: #283149;\n    fill: #283149;\n    transition-duration: 0.5s;\n}\n\n.add-todo > button:hover,\n.add-todo > svg:hover,\n.add-todo > svg:hover > path {\n    background-color: #404B69;\n    fill: #404B69;\n    color: #404B69;\n    border: 2px #404B69 solid;\n}\n\n#todo-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 2rem;\n    padding-top: 3rem;\n    width: 100%;\n}\n\n.todo-item {\n    width: 75%;\n    padding: 1rem 1rem 1rem 0;\n    background-color: #404B69;\n    display: flex;\n    border-radius: 10px;\n    /* Modify this part using javascript */\n    /* border-left: 5px #5f5f5f solid; */\n    box-shadow: 0 8px 12px gray;\n    cursor: pointer;\n}\n\n/* DA0463 high, da8404 medium, 04da44 low, 5f5f5f default*/\n\n.checkmark {\n    width: 10%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.checkmark > input {\n    width: 1.5rem;\n    height: 1.5rem;\n}\n\n.todo-details {\n    display: flex;\n    justify-content: space-between;\n    flex: 1 0 auto;\n}\n\n.todo-details > p {\n    font-size: 2rem;\n    padding-right: 1rem;\n}\n\n.add-delete {\n    display: flex;\n    width: 10%;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 1rem;\n    height: 100%;\n}\n\n.add-delete > button {\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.add-delete > button > svg {\n    height: 28px;\n    width: 28px;\n}\n\n.add-delete > button > svg:hover > path {\n    fill: #f34949\n}\n\ndialog {\n    top: 25%;\n    left: 30%;\n    width: 40%;\n    height: 40%;\n    border: none;\n    border-radius: 10px;\n    overflow: hidden;\n}\n\ndialog::backdrop {\n    background-color: gray;\n    opacity: 0.5;\n}\n\n.form-container {\n    width: 100%;\n    height: 100%;\n    border-radius: 10px;\n}\n\n.form-container > h2 {\n    font-size: 2rem;\n    padding: 0.5rem 0;\n    text-align: center;\n    background-color: #404B69;\n}\n\nform {\n    padding-top: 1rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\nform > div,\nform > label {\n    padding-left: 3rem;\n}\n\nform > .input-container > label {\n    color: #404B69;\n    font-weight: bold;\n    font-size: 1.5rem;\n}\n\n.input-container > input,\n.input-container > select,\n.input-container > select > option {\n    width: 90%;\n    font-size: 1.5rem;\n    color: #404B69;\n}\n\n.input-container > input {\n    border: none;\n    border-bottom: 2px #283149 solid;\n}\n.button-action {\n    width: 90%;\n    display: flex;\n    justify-content: space-between;\n}\n\n.button-action > button {\n    width: 20%;\n    font-size: 1.5rem;\n    border-radius: 5px;\n    border: none;\n    padding: 0.5rem 0;\n    color: #404B69;\n    cursor: pointer;\n    transition-duration: 0.5s;\n}\n\n.button-action > button:first-child {\n    background-color: #DBEDF3;\n}\n\n.button-action > button:first-child:hover {\n    background-color: #c1d3da;\n}\n\n.button-action > button:last-child {\n    background-color: #404B69;\n    color: #DBEDF3;\n}\n\n.button-action > button:last-child:hover {\n    background-color: #6a7baa;\n    color: #404B69;\n}\n\n"],sourceRoot:""}]);const a=i},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,d){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(i[l]=!0)}for(var c=0;c<e.length;c++){var A=[].concat(e[c]);o&&i[A[0]]||(void 0!==d&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=d),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),n.push(A))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),d="/*# ".concat(r," */");return[n].concat([d]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var d={},i=[],a=0;a<e.length;a++){var l=e[a],c=o.base?l[0]+o.base:l[0],A=d[c]||0,s="".concat(c," ").concat(A);d[c]=A+1;var u=t(s),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=r(p,o);o.byIndex=a,n.splice(a,0,{identifier:s,updater:m,references:1})}i.push(s)}return i}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var d=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<d.length;i++){var a=t(d[i]);n[a].references--}for(var l=o(e,r),c=0;c<d.length;c++){var A=t(d[c]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}d=l}}},659:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var d=t.sourceMap;d&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(d))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var d=n[o]={id:o,exports:{}};return e[o](d,d.exports,t),d.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{function e(e){const n=e.target.parentElement.parentElement.parentElement;var t;t=e.target.parentElement.parentElement.value,localStorage.removeItem(t);const o=document.getElementById("projects");console.log(n),o.removeChild(n)}let n=0;function o(){const e=document.getElementById("projects");e.addEventListener("click",A);const n=document.createElement("div");n.classList.add("project");const t=document.createElement("input");t.type="text",t.name="new-project",t.addEventListener("focusout",r),t.addEventListener("keydown",r),n.appendChild(t),e.appendChild(n),t.focus()}function r(t){var o=Date.now();if(13!==t.keyCode&&"focusout"!==t.type)return;const r=document.querySelector(".project:last-child"),d=document.querySelector(".project > input"),i=document.createElement("p");i.classList.add("project-card");let a=d.value;""===a.trim()&&(a="Project"+n++),i.textContent=a,function(e){console.log("executed"),localStorage.setItem(e.id,JSON.stringify(e))}({id:o,projName:a,tasks:[]});const l=document.createElement("button");l.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#5f6368">\n                        <path d="M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z"/>\n                    </svg>',l.value=o,l.addEventListener("click",e),r.replaceChildren(),r.appendChild(i),r.appendChild(l)}function d(e){e.preventDefault();const n=document.querySelector('.input-container > input[name="task-title"]'),t=document.querySelector('.input-container > input[name="task-description"]'),o=document.querySelector('.input-container > input[name="task-due"]'),r=document.querySelector('.input-container > select[name="priority"]'),d=e.target.getAttribute("data");console.log(e.target),console.log("Div id: "+d);let i=JSON.parse(localStorage.getItem(d));console.log(i),i.tasks.push({title:n.value,description:t.value,due:o.value,priority:r.value,done:"0"}),console.log("inside add task"),localStorage.setItem(d,JSON.stringify(i)),document.querySelector("dialog:nth-of-type(1)").close(),A(e)}function i(e){const n=e.target.getAttribute("index"),t=e.target.getAttribute("loaded"),o=JSON.parse(localStorage.getItem(t));console.log(n),0===n&&o.tasks.length>1?o.tasks=o.tasks.slice(1):0===n&&1===o.tasks.length||n===o.tasks.length-1?o.tasks=o.tasks.pop():o.tasks=o.tasks.slice(0,n).concat(o.tasks.slice(n+1)),console.log(o.tasks),localStorage.setItem(t,JSON.stringify(o)),a(e)}function a(e){const n=document.getElementById("todo-container");n.replaceChildren(),console.log(e.target);let t=e.target.getAttribute("loaded");console.log("In ui loadAgain: "+t),document.querySelector(".button-action > button:first-child").setAttribute("data",t);var o=JSON.parse(localStorage.getItem(t));if(null!==o){var r=o.tasks;for(let e of r){let o=document.createElement("div");o.classList.add("todo-item"),o.setAttribute("index",r.indexOf(e)),"3"==e.priority?o.style.borderLeft="5px #DA0463 solid":"2"==e.priority?o.style.borderLeft="5px #da8404 solid":"1"==e.priority?o.style.borderLeft="5px #04da44 solid":"0"==e.priority&&(o.style.borderLeft="5px #5f5f5f solid");let d=document.createElement("div");d.classList.add("checkmark");let a=document.createElement("input");a.type="checkbox",a.name="done",a.addEventListener("click",s),a.addEventListener("click",u),a.setAttribute("index",r.indexOf(e)),a.setAttribute("loaded",t),d.appendChild(a);let l=document.createElement("div");l.classList.add("todo-details");let c=document.createElement("p");c.classList.add("title"),c.textContent=e.title;let A=document.createElement("p");A.classList.add("due"),A.textContent=e.due,l.appendChild(c),l.appendChild(A);let m=document.createElement("div");m.classList.add("add-delete");let h=document.createElement("button");h.innerHTML=`<svg index=${r.indexOf(e)} loaded=${t} xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#5f6368">\n                                <path index=${r.indexOf(e)} loaded=${t} d="M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z"/>\n                            </svg>`,h.addEventListener("click",i),h.setAttribute("index",r.indexOf(e)),h.setAttribute("loaded",t),h.children[0].addEventListener("click",i);let f=document.createElement("button");f.innerHTML=`<svg index=${r.indexOf(e)} loaded=${t} xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#5f6368">\n                                <path index=${r.indexOf(e)} loaded=${t} d="M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h357l-80 80H200v560h560v-278l80-80v358q0 33-23.5 56.5T760-120H200Zm280-360ZM360-360v-170l367-367q12-12 27-18t30-6q16 0 30.5 6t26.5 18l56 57q11 12 17 26.5t6 29.5q0 15-5.5 29.5T897-728L530-360H360Zm481-424-56-56 56 56ZM440-440h56l232-232-28-28-29-28-231 231v57Zm260-260-29-28 29 28 28 28-28-28Z"/>\n                            </svg>`,f.setAttribute("index",r.indexOf(e)),f.setAttribute("loaded",t),f.children[0].addEventListener("click",(n=>{const o=document.querySelector("#edit .button-action > button:first-child");console.log(o),o.setAttribute("loaded",t),o.setAttribute("index",r.indexOf(e));const d=document.querySelector("dialog:nth-of-type(2)");p(n),d.showModal()})),m.appendChild(h),m.appendChild(f),o.appendChild(d),o.appendChild(l),o.appendChild(m),"1"===e.done?(a.checked=!0,o.style.backgroundColor="gray"):"0"===e.done&&(a.checked=!1),n.appendChild(o)}}}function l(e){const n=e.target,t=n.getAttribute("loaded"),o=n.getAttribute("index");console.log("inside modify done");const r=JSON.parse(localStorage.getItem(t));console.log(r.tasks),1==n.checked?r.tasks[o].done="1":r.tasks[o].done="0",console.log(r),localStorage.setItem(t,JSON.stringify(r))}function c(e){e.preventDefault();const n=e.target.getAttribute("loaded"),t=e.target.getAttribute("index"),o=JSON.parse(localStorage.getItem(n));var r=o.tasks[t];const d=document.querySelector('input[name="new-task-title"]'),i=document.querySelector('input[name="new-task-description"]'),l=document.querySelector('input[name="new-task-due"]'),c=document.querySelector('select[name="new-priority"]');console.log(c),r.title=d.value,r.description=i.value,r.due=l.value,r.priority=c.value,o.tasks[t]=r,localStorage.setItem(n,JSON.stringify(o)),a(e)}function A(e){const n=document.getElementById("todo-container");let t;n.replaceChildren(),console.log(e.target),t=null!==e.target.getAttribute("data")?e.target.getAttribute("data"):e.target.parentElement.getAttribute("data"),document.querySelector(".add-todo > button").setAttribute("data",t),console.log("In ui load selected: "+t),document.querySelector(".button-action > button:first-child").setAttribute("data",t);var o=JSON.parse(localStorage.getItem(t));if(null!==o){var r=o.tasks;for(let e of r){let o=document.createElement("div");o.classList.add("todo-item"),o.setAttribute("index",r.indexOf(e)),console.log(e.priority),"3"==e.priority?o.style.borderLeft="5px #DA0463 solid":"2"==e.priority?o.style.borderLeft="5px #da8404 solid":"1"==e.priority?o.style.borderLeft="5px #04da44 solid":"0"==e.priority&&(o.style.borderLeft="5px #5f5f5f solid");let d=document.createElement("div");d.classList.add("checkmark");let a=document.createElement("input");a.type="checkbox",a.name="done",a.addEventListener("click",s),a.addEventListener("click",u),a.setAttribute("index",r.indexOf(e)),a.setAttribute("loaded",t),d.appendChild(a);let l=document.createElement("div");l.classList.add("todo-details");let c=document.createElement("p");c.classList.add("title"),c.textContent=e.title;let A=document.createElement("p");A.classList.add("due"),A.textContent=e.due,l.appendChild(c),l.appendChild(A);let m=document.createElement("div");m.classList.add("add-delete");let h=document.createElement("button");h.innerHTML=`<svg index=${r.indexOf(e)} loaded=${t} xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#5f6368">\n                                <path index=${r.indexOf(e)} loaded=${t} d="M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z"/>\n                            </svg>`,h.setAttribute("index",r.indexOf(e)),h.setAttribute("loaded",t),h.addEventListener("click",i),h.children[0].addEventListener("click",i);const f=document.createElement("button");f.innerHTML=`<svg index=${r.indexOf(e)} loaded=${t} xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#5f6368">\n                                <path index=${r.indexOf(e)} loaded=${t} d="M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h357l-80 80H200v560h560v-278l80-80v358q0 33-23.5 56.5T760-120H200Zm280-360ZM360-360v-170l367-367q12-12 27-18t30-6q16 0 30.5 6t26.5 18l56 57q11 12 17 26.5t6 29.5q0 15-5.5 29.5T897-728L530-360H360Zm481-424-56-56 56 56ZM440-440h56l232-232-28-28-29-28-231 231v57Zm260-260-29-28 29 28 28 28-28-28Z"/>\n                            </svg>`,f.setAttribute("index",r.indexOf(e)),f.setAttribute("loaded",t),f.children[0].addEventListener("click",(n=>{const o=document.querySelector("#edit .button-action > button:first-child");console.log(o),o.setAttribute("loaded",t),o.setAttribute("index",r.indexOf(e));const d=document.querySelector("dialog:nth-of-type(2)");p(n),d.showModal()})),m.appendChild(h),m.appendChild(f),o.appendChild(d),o.appendChild(l),o.appendChild(m),"1"===e.done?(a.checked=!0,o.style.backgroundColor="gray"):"0"===e.done&&(a.checked=!1),n.appendChild(o)}}}function s(e){0!=e.target.checked&&(e.target.parentElement.parentElement.style.backgroundColor="gray",l(e))}function u(e){1!=e.target.checked&&(e.target.parentElement.parentElement.style.backgroundColor="#404B69",l(e))}function p(e){const n=document.querySelector('input[name="new-task-title"]'),t=document.querySelector('input[name="new-task-description"]'),o=document.querySelector('input[name="new-task-due"]'),r=document.querySelector('select[name="new-priority"]'),d=e.target.getAttribute("loaded"),i=e.target.getAttribute("index"),a=JSON.parse(localStorage.getItem(d)).tasks[i];n.value=a.title,t.value=a.description,o.value=a.due,r.value=a.priority,console.log("inside overwrite input")}var m=t(72),h=t.n(m),f=t(825),g=t.n(f),v=t(659),B=t.n(v),b=t(56),C=t.n(b),I=t(540),y=t.n(I),x=t(113),k=t.n(x),E=t(365),w={};w.styleTagTransform=k(),w.setAttributes=C(),w.insert=B().bind(null,"head"),w.domAPI=g(),w.insertStyleElement=y(),h()(E.A,w),E.A&&E.A.locals&&E.A.locals,function(){!function(){const e=document.getElementById("projects"),n=Object.keys(localStorage);console.log(n);for(let t=0;t<n.length;t++){let o=JSON.parse(localStorage.getItem(n[t])),r=document.createElement("div");r.classList.add("project"),r.setAttribute("data",n[t]),console.log("Project data: "+r.getAttribute("data"));let d,i=document.createElement("p");i.textContent=o.projName,r.appendChild(i),"0"!==n[t]?(d=document.createElement("button"),d.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#5f6368">\n                            <path d="M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z"></path>\n                        </svg>',d.value=o.id,r.appendChild(d)):(console.log("Inside else load projects: "+n[t]),r.setAttribute("data","0")),e.appendChild(r)}}(),function(){const e=document.getElementById("todo-container");e.replaceChildren();const n=JSON.parse(localStorage.getItem("0"));document.querySelector(".add-todo > button").setAttribute("data","0"),document.querySelector(".button-action > button:first-child").setAttribute("data","0"),null===JSON.parse(localStorage.getItem("0"))&&localStorage.setItem("0",{id:"0",projName:"Default",tasks:[]});var o=n.tasks;for(let n of o){let r=document.createElement("div");r.classList.add("todo-item"),"3"==n.priority?r.style.borderLeft="5px #DA0463 solid":"2"==n.priority?r.style.borderLeft="5px #da8404 solid":"1"==n.priority?r.style.borderLeft="5px #04da44 solid":"0"==n.priority&&(r.style.borderLeft="5px #5f5f5f solid");let d=document.createElement("div");d.classList.add("checkmark");let a=document.createElement("input");a.type="checkbox",a.name="done",a.addEventListener("click",s),a.addEventListener("click",u),a.setAttribute("index",o.indexOf(n)),a.setAttribute("loaded","0"),d.appendChild(a);let l=document.createElement("div");l.classList.add("todo-details");let c=document.createElement("p");c.classList.add("title"),c.textContent=n.title;let A=document.createElement("p");A.classList.add("due"),A.textContent=n.due,l.appendChild(c),l.appendChild(A);let p=document.createElement("div");p.classList.add("add-delete");let m=document.createElement("button");m.innerHTML=`<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#5f6368" index=${o.indexOf(n)} loaded="0">\n                                <path index=${o.indexOf(n)} loaded="0" d="M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z"/>\n                            </svg>`,m.addEventListener("click",i),m.setAttribute("index",o.indexOf(n)),m.setAttribute("loaded","0"),m.children[0].addEventListener("click",i);let h=document.createElement("button");h.innerHTML=`<svg index=${o.indexOf(n)} loaded="0" xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#5f6368">\n                                <path index=${o.indexOf(n)} loaded="0" d="M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h357l-80 80H200v560h560v-278l80-80v358q0 33-23.5 56.5T760-120H200Zm280-360ZM360-360v-170l367-367q12-12 27-18t30-6q16 0 30.5 6t26.5 18l56 57q11 12 17 26.5t6 29.5q0 15-5.5 29.5T897-728L530-360H360Zm481-424-56-56 56 56ZM440-440h56l232-232-28-28-29-28-231 231v57Zm260-260-29-28 29 28 28 28-28-28Z"/>\n                            </svg>`,h.setAttribute("index",o.indexOf(n)),h.setAttribute("loaded","0"),h.children[0].addEventListener("click",(()=>{const e=document.querySelector("#edit .button-action > button:first-child");console.log(e),e.setAttribute("loaded","0"),e.setAttribute("index",o.indexOf(n)),t.showModal()})),p.appendChild(m),p.appendChild(h),r.appendChild(d),r.appendChild(l),r.appendChild(p),"1"===n.done?(a.checked=!0,r.style.backgroundColor="gray"):"0"===n.done&&(a.checked=!1),e.appendChild(r)}}();const n=document.querySelector("dialog:nth-of-type(1)"),t=document.querySelector("dialog:nth-of-type(2)"),r=document.querySelector("#add-container > button"),a=Array.from(document.querySelectorAll(".project > button"));r.addEventListener("click",o),a.forEach((n=>{n.addEventListener("click",e)})),document.querySelector(".add-todo > button").addEventListener("click",(function(){document.querySelector(".dialog-form#add-todo").showModal()})),Array.from(document.getElementsByClassName("project")).forEach((e=>{e.addEventListener("click",A)})),document.querySelector(".button-action > button:first-child").addEventListener("click",d),document.querySelector(".button-action > button:last-child").addEventListener("click",(()=>{n.close()})),document.querySelector("#edit .button-action > button:last-child").addEventListener("click",(()=>{t.close()}));const l=document.querySelector("#edit .button-action > button:first-child");l.addEventListener("click",c),l.addEventListener("click",(()=>{t.close()}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,